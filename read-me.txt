Ну вот мы и дошли до react. Ухуууу.
В общем материала настолько будет много, что я решил его вынести в отдельную папку с репозиторием 

Итак, начнем. React что щас, что и дальше будет популярным и постоянно всплывать в вакансиях. Как и говорилось ранее React
это целая среда и экосистема разработки у которой даже есть свои фреймворки и библиотеки. То есть у библиотеки есть свои библиотеки
ВОт настолько все зашло. 
React обычно предназначен для создания одностраничных приложений. То есть когда страница перезагружается только принуждено
Примепрами singlepage app является gmail instagram facebook. 
Основными принципами react или лучше сказать философией react является декларативность. То есть когда вы задаете просто конечную цель с результатом,
а не прописываете шаги к ней. Также создание своих компонентов. То есть браузеру придется не одно огромное дом дерево обрабатывать, где у каждого элемента по тысячи свойств,
а всего лишь скромные, ну или не скромные компоненты, созданные react и вами. Ну и что еще хочу выделить из принципов, так это то что эти компоненты будет легко использовать
повторно, хоть в других проектах.

Итак, переходим к подключению. Во-первых просто добавить реакт как например jquery или bootstrap не получится. Надо создаватьдля этого отдельный проектах
Во-вторых, react уже имеет в себе некий webpack, который будет объединять модули. Так как же мать его уже приступить к работе?
Щас все будет, не ссыте. Чтобы не создавать тысячу папок, за вас уже сделали готовую сборку для старта проекта

Запускаем эту команду:
npx create-react-app my-app

Когда все утсановится, вы увидите папку с my app и вам предложат перейти в эту папку, поэтомк не будем спорить и сделаем это
прописываем:
cd my-app

Теперь мы видим, что по путям мы зашли в папку. Также нам предлагают запустить это приложение, но щас пройдемся по папкам
Итак, в папке src мы видим index.js Помним, что это самый главный файл, то есть в этот файл все импортируется и именно этот файл будет обрабатывать браузер
Также, видим и другие всякие папки. Интуитивно можно догадаться, но в дальнейшем все разберем
Переходим в папку public. Здесь мы видим index.html. Логично что именно он будет отображаться. Щас в нем прописаны теги, чтобы при запуске у нас не было пустое окно
Также видим div с id='root'. Именно ткда будет все рендерится
Еще если мы перейдем в package-json, то увидим все библиотеки, которые подрублены. Да, по факту мы щас не только react установили. Но не волнуйтесь, скоро со всем разберемся
Так вот, там мы можем увидеть eslint, то есть аналог jshint, но продвинутый и специальный для react. Поэтомк лучше не ставить jshint сюда
Ладно, еще раз говорю все это будет разбираться, но позже
Запускаем проект:
npm start

У нас открывается дефолтный браузер и видим просто иконку с ссылкой не документацию. Можем ее в принципе удалить в app.js
А можно вообще пустую страницу оставить.

Заходим в консоль разработчика и видим, что нам предлагают установить плагин для браузера, чтобы у нас был лучше опыт
Это спейциальны раздел с компонентами для реакта, про которые я говорил, поэтому не жалуемся и идем скачивать

Вот так вот. Это можно сказать было вступление. Теперь смотрите файлы, там будувсе разъяснять